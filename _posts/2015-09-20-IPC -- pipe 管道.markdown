---
layout: post
title:  "IPC -- pipe 管道"
date:   2015-09-20 20:24:19 +0800
categories: 编程
---

demo:

{% highlight c %}
#include <vector>
#include <wait.h>
#include <string.h>
#include <cstdlib>
#include <cstdio>
#include <unistd.h>
#include <iostream>

using namespace std;

int main() {
    int pipe_fd[2];
    if(pipe(pipe_fd) < 0) {
        cerr << "create pipe fail." << endl;
        exit(-1);
    }
    pid_t pid = -1;
    vector<pid_t> v;
    for (int i=0; i<10; ++i) {
        if ((pid=fork()) < 0) {
            cerr << "fork fail." << endl;
            exit(-1);
        } else if (pid == 0) {
            close(pipe_fd[1]);
            char buf[100];
            while (read(pipe_fd[0], buf, 1) > 0) {
                write(STDOUT_FILENO, buf, 1);
            }
            close(pipe_fd[0]);
            cout << endl;
            printf("subprocess[%d] _exit.\n", getpid());
            _exit(0);
        } else {
            v.push_back(pid);
        }
    }
    close(pipe_fd[0]);
    cout << "main process begin write pipe..." << endl;
    const char * psz = "1234567890";
    write(pipe_fd[1], psz, strlen(psz));
    close(pipe_fd[1]);
    for(int i=0; i<10; i++) {
        waitpid(v[i], NULL, 0);   
    }
    printf("main process[%d] exit.\n", getpid());
    exit(0);
}
{% endhighlight %}

output:

```
panhzh3@hayespan:cpp/pplib $ ./a.out 
main process begin write pipe...
2354678901


subprocess[26298] _exit.
subprocess[26302] _exit.

subprocess[26295] _exit.

subprocess[26293] _exit.
subprocess[26300] _exit.



subprocess[26297] _exit.

subprocess[26301] _exit.
subprocess[26296] _exit.
subprocess[26294] _exit.

subprocess[26299] _exit.
main process[26292] exit.
```

